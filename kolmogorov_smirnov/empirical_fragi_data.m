% Test ksboot function with data from literature
%
% ksboot performs Kolmogorov-Smirnov test if a sample is generated by a continuous
% distribution function (model) which parameters are estimated from the sample

clear all
close all
clc

% Porter et al. (2007). Creating Fragility Functions for Performance-Based
% Earthquake Engineering
% Table 2.
% peak transient drift ratio
r = [0.43, 0.30, 0.28, 0.65, 0.22, 0.32, 0.43, 0.42,...
    0.28, 0.35, 0.31, 0.31, 0.28, 0.22, 0.22, 0.31,...
    0.40, 0.36, 0.28, 0.20, 0.50, 0.25, 0.50, 0.64,...
    0.54, 0.40, 0.80, 0.50, 0.50, 0.50, 0.50, 0.19,...
    0.19, 0.28, 0.28, 0.40, 0.74, 0.54, 0.43, 0.71,...
    0.43, 0.50, 0.70];

% plot
ecdf(r)
hold on
xx = 0.1:0.01:0.8;
plot(xx, lognormcdf(xx, mean(r), std(r)/mean(r)))
plot(xx, normcdf(xx, mean(r), std(r)))

parm_hat = fit_gumbel_mle(xx, 'par');
F = gevcdf(xx, 0, parm_hat(1), parm_hat(2));
plot(xx, F)

parm_hat = gevfit(r);
F = gevcdf(xx, parm_hat(1), parm_hat(2), parm_hat(3));
plot(xx, F)

hl = legend({'empirical', 'lognormal', 'normal', 'gumbel', 'gev'}, 'Location', 'southeast');
set(hl, 'interpreter', 'LaTeX')
xlabel('Peak transient drift ratio \%')
ylabel('Failure probability')
set(gca,'TickLabelInterpreter', 'LaTeX')

% test
n_boot = 1e3;
% LN2
disp('ln2')
[p, ksstat_sample] = ksboot(r, 'ln2', n_boot)

F = lognormcdf(r, mean(r), std(r)/mean(r));
% [h,p,ksstat,cv] = kstest(r, 'CDF', [r', F'])

% N
disp('normal')
[p, ksstat_sample] = ksboot(r, 'normal', n_boot)

% Gumbel
disp('Gumbel')
[p, ksstat_sample] = ksboot(r, 'gumbel', n_boot)


% gev
disp('gev')
[p, ksstat_sample] = ksboot(r, 'gev', n_boot)


